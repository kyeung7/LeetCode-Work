# Given a string s containing just the characters '(', ')', '{', '}', '[' and ']'
# Determine if the input string is valid.

#CURRENTLY PASSES 90%
class Solution(object):
    def isValid(self, s):
        correct = False #order flag
        
        openParen = ["(", "[", "{"]
        closeParen = [")", "]", "}"]
        
        if len(s) <= 0 or len(s) > 10**4: #constrainsts
            return False
        elif len(s) % 2 != 0: #cuz odd str not closed
            return False
        
        #print(s)
        i = 0
        j = len(s) - 1
        
        while i < len(s)/2: #no need for ceiling because no odd len
            if s[i] in openParen:
                index = openParen.index(s[i])
                print(index)
                #print(s[i], " open found in string")
                if s[i+1] in closeParen:
                    print("immediate closing")
                    if s[i+1] == closeParen[index]:
                        correct = True
                    else:
                        return False
                elif s[j - i] in closeParen:
                    if s[j-i] == closeParen[index]:
                        print("correct index, is amtch")
                    #print(s[j - i], "closed found in string")
                        correct = True
                    else:
                        print("incorrect index, not match")
                        return False
            else:
                print('false end')
                return False
            i+=1
        
        return correct
        """
        :type s: str
        :rtype: bool
        """
