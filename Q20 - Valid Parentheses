# Given a string s containing just the characters '(', ')', '{', '}', '[' and ']'
# Determine if the input string is valid.

class Solution(object):
    def isValid(self, s):
        correct = False #order flag
        
        openParen = ["(", "[", "{"]
        closeParen = [")", "]", "}"]
        
        if len(s) <= 0 or len(s) > 10**4: #constrainsts
            return False
        elif len(s) % 2 != 0: #cuz odd str not closed
            return False
        
        #print(s)
        i = 0
        j = len(s) - 1
        
        while i < len(s)/2: #no need for ceiling because no odd len
            if s[i] in openParen:
                print(s[i], " open found in string")
                if s[j - i] in closeParen:
                    print(s[j - i], "closed found in string")
            
            i+=1
        
        return correct
        """
        :type s: str
        :rtype: bool
        """
        
