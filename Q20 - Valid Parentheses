# Given a string s containing just the characters '(', ')', '{', '}', '[' and ']'
# Determine if the input string is valid.

class Solution(object):
    def isValid(self, s):
        correct = False #order flag
        
        parenOpen = ["(", "[", "{"]
        parenClose = [")", "]", "}"]
        
        if len(s) <= 0 or len(s) > 10**4: #constrainsts
            return False
        elif len(s) % 2 != 0: #cuz odd str not closed
            return False
        
        #print(s)
        for char in s:
            print(char)
            if char in type1:
                print(char, " found in string")
        """
        :type s: str
        :rtype: bool
        """
        
